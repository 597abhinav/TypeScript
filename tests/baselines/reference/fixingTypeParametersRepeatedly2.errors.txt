tests/cases/compiler/fixingTypeParametersRepeatedly2.ts(11,27): error TS2345: Argument of type '(d: Derived) => Base' is not assignable to parameter of type '(p: Derived) => Derived'.
  Type 'Base' is not assignable to type 'Derived'.
    Property 'toBase' is missing in type 'Base'.
tests/cases/compiler/fixingTypeParametersRepeatedly2.ts(17,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'result' must be of type 'Derived', but here has type 'Base'.


==== tests/cases/compiler/fixingTypeParametersRepeatedly2.ts (2 errors) ====
    interface Base {
        baseProp;
    }
    interface Derived extends Base {
        toBase(): Base;
    }
    
    var derived: Derived;
    
    declare function foo<T>(x: T, func: (p: T) => T): T;
    var result = foo(derived, d => d.toBase());
                              ~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(d: Derived) => Base' is not assignable to parameter of type '(p: Derived) => Derived'.
!!! error TS2345:   Type 'Base' is not assignable to type 'Derived'.
!!! error TS2345:     Property 'toBase' is missing in type 'Base'.
    
    // bar should type check just like foo.
    // The same error should be observed in both cases.
    declare function bar<T>(x: T, func: (p: T) => T): T;
    declare function bar<T>(x: T, func: (p: T) => T): T;
    var result = bar(derived, d => d.toBase());
        ~~~~~~
!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'result' must be of type 'Derived', but here has type 'Base'.